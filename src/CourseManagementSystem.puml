@startuml
skinparam nodesep 500
skinparam ranksep 3000

namespace Models.Study #CC99FF {
    class Course {
        -courseId: String
        -name: String
        -courseModuleCodes: courseModuleCodes
        -isAvailable: boolean
        +Course(String name, HashSet<String> courseModuleCodes, boolean isAvailable)
        +Course(String courseId, String name, HashSet<String> courseModuleCodes, boolean isAvailable)
        +<<void>> addCourseModule(String courseModuleCode)
        +<<void>> removeCourseModule(String courseModuleCode)
    }

    class CourseModule {
        -courseModuleCode: String
        -name: String
        -level: int
        -instructorNames: HashSet<String>
        -isMandatory: boolean
        -assignmentIds: HashSet<String>
        -studentNames: HashSet<String>
        +CourseModule(String courseModuleCode, String name, int level, HashSet<String> instructorNames, boolean isMandatory, HashSet<String> assignmentIds, HashSet<String> studentNames)
        +<<void>>addInstructorName(String instructorName)
        +<<void>>removeInstructorName(String instructorName)
        +<<void>>addAssignmentId(String assignmentId)
        +<<int>>getTotalAvailableMarks()
        +<<void>>addStudentName(String studentName)
        +<<void>>removeStudentName(String studentName)
    }

    class Assignment {
        -assignmentId: String
        -assignmentName: String
        -totalPossibleMarks: int
        +Assignment(String assignmentName, int totalPossibleMarks)
        +Assignment(String assignmentId, String assignmentName, int totalPossibleMarks)
    }

    class CourseModuleResult {
        -courseModuleCode: String
        -assignmentResults: LinkedHashMap<String, Integer>
        +CourseModuleResult(String courseModule, LinkedHashMap<String, Integer> assignmentResults)
        +<<int>> getTotalMark()
        +<<void>>addAssignmentResults(String assignmentId)
    }

    ' Assignments could be across multiple course modules, so would not be destroyed if the course module was
    CourseModule o-[bold,#421A55]- "0..*" Assignment

    ' A course module could be in multiple courses, so would not be destroyed if the course was
    Course o-[bold,#421A55]- "0..*" CourseModule

    CourseModule -[bold,#421A55]> "1" FileHandling.Loaders.AssignmentLoader
}

namespace Models.Users #A9D1F7 {
    abstract class User {
        'Username is unique
        -username: String
        -password: String
        -firstName: String
        -middleName: String
        -lastName: String
        +User(String username, String password, String firstName, String middleName, String lastName)
    }

    class Student {
        -year: int
        -level: int
        -courseId: String
        -completedCourseModules: ArrayList<CourseModuleResult>
        -currentCourseModules: CourseModuleResult[8]
        +Student(String username, String password, String firstName, String middleName, String lastName, int year, int level)
        +Student(String username, String password, String firstName, String middleName, String lastName, int year, int level, String courseId, ArrayList<CourseModuleResult> completedCourseModules, CourseModuleResult[] currentCourseModules)
        +<<void>> addCompletedCourseModule(CourseModuleResult completedCourseModule)
        +<<void>> registerForCourse(String courseName)
        +<<void>> enrolForCourseModule(String courseModuleCode)
        +<<void>> removeCurrentCourseModule(CourseModuleResult courseModule)
        +<<void>> removeAllCurrentCourseModules()
        +<<void>> removeAllCompletedCourseModules()
        +<<boolean>> canProgressToNextLevel()
    }

    class CourseAdministrator {
        +CourseAdministrator(String username, String password, String firstName, String middleName, String lastName)
        +<<void>> addNewCourse(String courseName)
        +<<void>> addNewCourseModuleToCourse(Course course, String courseModuleCode, String name, int level, HashSet<String> instructorNames, boolean isMandatory, HashSet<String> assignmentIds, HashSet<String> studentNames)
        +<<ArrayList<Course>>> getAllCourses()
        +<<ArrayList<CourseModule>>> getAllCourseModules()
        +<<void>> cancelCourse(Course course)
        +<<void>> reopenCourse(Course course)
        +<<void>> deleteCourse(Course courseToDelete)
        +<<void>> renameCourse(Course course, String newName)
        +<<void>> renameCourseModule(CourseModule courseModule, String newName)
        +<<String>> createResultsSlip(Student student)
        +<<void>> assignInstructorToCourseModule(CourseModule courseModule, Instructor instructor)
        +<<void>> removeInstructorFromCourseModule(CourseModule courseModule, Instructor instructor)
        +<<void>> removeCourseModuleFromCourse(ArrayList<Course> courses, Course course, CourseModule courseModule)
        +<<void>> removeCourseModuleFromSystem(ArrayList<Course> courses, CourseModule courseModule)
        +<<void>> promoteStudent(Student student)
        +<<void>> removeStudentFromCourse(Student student)
    }

    class Instructor {
        -courseModules: String[]
        +Instructor(String username, String password, String firstName, String middleName, String lastName)
        +Instructor(String username, String password, String firstName, String middleName, String lastName, String[] courseModuleCodes)
        +<<String[]>> getCourseModules()
        +<<boolean>> addCourseModule(String courseModuleCode)
        +<<void>> removeCourseModule(String courseModuleCode)
        +<<void>> createAssignment(String courseModuleCode, String assignmentName, int mark)
        -<<void>> updateExistingStudents(CourseModule courseModule, Assignment assignment)
        +<<void>> addMark(Student student, CourseModule courseModule, Assignment assignment, int mark)
        +<<void>> markStudentAsCompleted(Student student, CourseModule courseModule)
        +<<void>> updateAssignmentName(Assignment assignment, String newName)
        +<<void>> updateAssignmentMarks(CourseModule courseModule, Assignment assignment, int marks)
    }

    ' User is an abstract class, and student, instructor and course administrator are children of it to get the basic info (i.e. username, password, first name, middle name, last name, date of birth)
    User <|-- Student
    User <|-- Instructor
    User <|-- CourseAdministrator

    ' Student relationships
    ' The student has one course, or else they're not enrolled on one
    Student o-[bold,#3B3B6B]- "0..1" Models.Study.Course
    Student *-[bold,#3B3B6B]- "0..*" Models.Study.CourseModuleResult

    ' Instructor relationships
    Instructor o-[bold,#3B3B6B]- "0..4" Models.Study.CourseModule

    CourseAdministrator -[bold,#3B3B6B]> "1" FileHandling.Loaders.CourseLoader
    Student -[bold,#3B3B6B]> "1" FileHandling.Loaders.CourseLoader

    CourseAdministrator -[bold,#3B3B6B]> "1" FileHandling.Loaders.CourseModuleLoader
    Instructor -[bold,#3B3B6B]> "1" FileHandling.Loaders.CourseModuleLoader
    Student -[bold,#3B3B6B]> "1" FileHandling.Loaders.CourseModuleLoader

    Instructor -[bold,#3B3B6B]> "1" FileHandling.Loaders.StudentLoader
    Student -[bold,#3B3B6B]> "1" FileHandling.Loaders.StudentLoader

    Instructor -[bold,#3B3B6B]> "1" FileHandling.Savers.AssignmentSaver

    CourseAdministrator -[bold,#3B3B6B]> "1" FileHandling.Savers.CourseModuleSaver
    Instructor -[bold,#3B3B6B]> "1" FileHandling.Savers.CourseModuleSaver

    CourseAdministrator -[bold,#3B3B6B]> "1" FileHandling.Savers.CourseSaver
    CourseAdministrator -[bold,#3B3B6B]> "1" FileHandling.Savers.InstructorSaver

    CourseAdministrator -[bold,#3B3B6B]> "1" FileHandling.Savers.StudentSaver
    Instructor -[bold,#3B3B6B]> "1" FileHandling.Savers.StudentSaver

    CourseAdministrator -[bold,#3B3B6B]> "1" FileHandling.Loaders.AssignmentLoader
}

namespace FileHandling #B4F0A7 {
    enum Filename {
        ASSIGNMENTS
        COURSEMODULES
        COURSES
        RESULTS
        COURSEADMINISTRATORS
        INSTRUCTORS
        STUDENTS
    }

    class FileHandler {
        -filenames: HashMap<Filename, String>
        +FileHandler()
        +<<void>> writeFile(Filename filename, String contents)
        +<<void>> writeFile(String customFilename, String contents)
        +<<String>> loadFile(Filename filename)
    }

    FileHandler --> Filename
}

namespace FileHandling.Loaders #FFFFBF {
    'Loaders
    class AssignmentLoader {
        -fileHandler: FileHandler
        +<<ArrayList<Assignment>>> loadAllAssignments()
        +<<Assignment>> loadAssignment(String assignmentId)
    }

    class CourseAdministratorLoader {
        -fileHandler: FileHandler
        +<<ArrayList<CourseAdministrator>>> loadAllCourseAdministrators()
        +<<CourseAdministrator>> loadCourseAdministrator()
    }

    class CourseLoader {
        -fileHandler: FileHandler
        +<<ArrayList<Course>>> loadAllCourses()
        +<<ArrayList<Course>>> loadAllAvailableCourses()
        +<<Course>> loadCourse(String name)
    }

    class CourseModuleLoader {
        -fileHandler: FileHandler
        +<<ArrayList<CourseModule>>> loadAllCourseModules()
        +CourseModule loadCourseModule(String courseModuleCode)
    }

    class InstructorLoader {
        -fileHandler: FileHandler
        +<<ArrayList<Instructor>>> loadAllInstructors()
        +<<Instructor>> loadInstructor(String username)
    }

    class StudentLoader {
        -fileHandler: FileHandler
        +<<ArrayList<Student>>> loadAllStudents()
        +<<Student>> loadStudent(String username)
    }

    ' All the loaders will have access to the FileHandler, but the FileHandler won't have access to the loader/saver
    AssignmentLoader -[bold,#F4B404]> "0..1" FileHandling.FileHandler
    CourseAdministratorLoader -[bold,#F4B404]> "0..1" FileHandling.FileHandler
    CourseLoader -[bold,#F4B404]> "0..1" FileHandling.FileHandler
    CourseModuleLoader -[bold,#F4B404]> "0..1" FileHandling.FileHandler
    InstructorLoader -[bold,#F4B404]> "0..1" FileHandling.FileHandler
    StudentLoader -[bold,#F4B404]> "0..1" FileHandling.FileHandler
}

namespace FileHandling.Savers #FFDFBE {
    class AssignmentSaver {
        -fileHandler: FileHandler
        +<<void>> saveAllAssignments(ArrayList<Assignment> assignments)
        +<<void>> saveAssignment(Assignment assignment)
    }

    class CourseAdministratorSaver {
        -fileHandler: FileHandler
        +<<void>> saveAllCourseAdministrators(ArrayList<CourseAdministrator> courseAdministrators)
        +<<void>> saveCourseAdministrator(CourseAdministrator courseAdministrator)
    }

    class CourseModuleSaver {
        -fileHandler: FileHandler
        +<<void>> saveAllCourseModules(ArrayList<CourseModule> courseModules)
        +<<void>> saveCourseModule(CourseModule courseModule)
        +<<void>> removeCourseModuleAndSave(CourseModule courseModule))
    }

    class CourseSaver {
        -fileHandler: FileHandler
        +<<void>> saveAllCourses(ArrayList<Course> courses)
        +<<void>> saveCourse(Course course)
        +<<void>> deleteCourseAndSave(Course course))
    }

    class InstructorSaver {
        -fileHandler: FileHandler
        +<<void>> saveAllInstructors(ArrayList<Instructor> instructors)
        +<<void>> saveInstructor(Instructor instructor)
    }

    class ResultsSlipSaver {
        -fileHandler: FileHandler
        +<<void>> saveResultsSlip(String customFilename, String resultsSlip)
    }

    class StudentSaver {
        -fileHandler: FileHandler
        +<<void>> saveAllStudents(ArrayList<Student> students)
        +<<void>> saveStudent(Student student)
    }

    AssignmentSaver -[bold,#FE8B01]> "0..1" FileHandling.FileHandler
    CourseAdministratorSaver -[bold,#FE8B01]> "0..1" FileHandling.FileHandler
    CourseSaver -[bold,#FE8B01]> "0..1" FileHandling.FileHandler
    CourseModuleSaver -[bold,#FE8B01]> "0..1" FileHandling.FileHandler
    InstructorSaver -[bold,#FE8B01]> "0..1" FileHandling.FileHandler
    ResultsSlipSaver -[bold,#FE8B01]> "0..1" FileHandling.FileHandler
    StudentSaver -[bold,#FE8B01]> "0..1" FileHandling.FileHandler

    AssignmentSaver -[bold,#FE8B01]> "1" FileHandling.Loaders.AssignmentLoader

    CourseAdministratorSaver -[bold,#FE8B01]> "1" FileHandling.Loaders.CourseAdministratorLoader

    CourseSaver -[bold,#FE8B01]> "1" FileHandling.Loaders.CourseLoader

    CourseModuleSaver -[bold,#FE8B01]> "1" FileHandling.Loaders.CourseModuleLoader

    StudentSaver -[bold,#FE8B01]> "1" FileHandling.Loaders.StudentLoader
}

namespace Menus #FFB1B0 {
    'Menus
    class CourseAdministratorCourseModuleSubMenu {
        -courseAdministrator: CourseAdministrator
        -scanner: Scanner
        -courses: ArrayList<Course>
        -courseModules: ArrayList<CourseModule>
        +CourseAdministratorCourseModuleSubMenu(Scanner scanner, CourseAdministrator courseAdministrator, ArrayList<Course> courses)
        +<<void>> runCourseModuleSubMenu()
        -<<void>> addCourseModuleToCourse()
        -<<void>> removeCourseModuleFromCourse()
        -<<void>> renameCourseModule()
        -<<void>> addInstructorToCourseModule()
        -<<void>> removeInstructorFromCourseModule()
        -<<void>> displayCourseModuleTable()
    }

    class CourseAdministratorMenu {
        -courseAdministrator: CourseAdministrator
        -scanner: Scanner
        -courses: ArrayList<Course>
        +CourseAdministratorMenu(Scanner scanner, CourseAdministrator courseAdministrator)
        +<<void>> runCourseAdministratorMenu()
        -<<void>> cancelCourse(ArrayList<Course> courses)
        -<<void>> reopenCourse(ArrayList<Course> courses)
        -<<void>> addCourse(ArrayList<Course> courses)
        -<<void>> deleteCourse(ArrayList<Course> courses)
        -<<void>> renameCourse(ArrayList<Course> courses)
        -<<void>> generateResultsSlip()
        -<<void>> promoteStudent()
    }

    class HomeMenu {
        +<<void>> login()
    }

    class AccountCreator {
        -scanner: Scanner
        +AccountCreator(Scanner scanner)
        +createAccount()
        -createStudent(String username, String password, String firstName, String middleName, String lastName, int year, int level)
        -createInstructor(String username, String password, String firstName, String middleName, String lastName)
        -createCourseAdministrator(String username, String password, String firstName, String middleName, String lastName)
    }

    class LoginHandler {
        -scanner: Scanner
        +LoginHandler(Scanner scanner)
        +login()
        -studentLogin()
        -instructorLogin()
        -courseAdministratorLogin()
    }

    class InstructorMenu {
        -instructor: Instructor
        -scanner: Scanner
        -courseModules: ArrayList<CourseModule>
        +InstructorMenu(Instructor instructor, Scanner scanner)
        +<<void>> runInstructorMenu()
        -<<void>> addMarksToStudent()
        -<<void>> createAssignment()
        -<<void>> editAssignmentsInCourseModule()
        -<<void>> markStudentAsCompletedModule()
        -<<void>> renameAssignment(Assignment assignment)
        -<<void>> updateMarks(CourseModule courseModule, Assignment assignment)
    }

    class StudentMenu {
        -student: Student
        -scanner: Scanner
        +StudentMenu(Student student, Scanner scanner)
        +<<void>> runStudentMenu()
        -<<void>> enrolOntoCourseModule()
        -<<void>> viewCurrentCourseModules()
        -<<void>> viewCompletedCourseModules()
    }

    HomeMenu --> "1" AccountCreator
    AccountCreator --> "1" HomeMenu
    HomeMenu --> "1" LoginHandler
    LoginHandler --> "1" CourseAdministratorMenu
    CourseAdministratorMenu --> HomeMenu
    LoginHandler --> "1" InstructorMenu
    InstructorMenu --> "1" HomeMenu
    LoginHandler --> "1" StudentMenu
    StudentMenu --> "1" HomeMenu
    CourseAdministratorMenu --> "1" CourseAdministratorCourseModuleSubMenu
    CourseAdministratorCourseModuleSubMenu --> "1" CourseAdministratorMenu

    InstructorMenu -[bold,#B22032]> "1" FileHandling.Loaders.AssignmentLoader
    StudentMenu -[bold,#B22032]> "1" FileHandling.Loaders.AssignmentLoader

    CourseAdministratorMenu -[bold,#B22032]> "1" FileHandling.Loaders.CourseAdministratorLoader
    InstructorMenu -[bold,#B22032]> "1" FileHandling.Loaders.CourseLoader
    StudentMenu -[bold,#B22032]> "1" FileHandling.Loaders.CourseLoader

    CourseAdministratorCourseModuleSubMenu -[bold,#B22032]> "1" FileHandling.Loaders.CourseModuleLoader
    InstructorMenu -[bold,#B22032]> "1" FileHandling.Loaders.CourseModuleLoader
    StudentMenu -[bold,#B22032]> "1" FileHandling.Loaders.CourseModuleLoader

    CourseAdministratorCourseModuleSubMenu o-[bold,#B22032]- "0..*" Models.Study.Course
    CourseAdministratorCourseModuleSubMenu o-[bold,#B22032]- "0..*" Models.Study.CourseModule
    CourseAdministratorCourseModuleSubMenu o-[bold,#B22032]- "0..1" Models.Users.CourseAdministrator

    AccountCreator -[bold,#B22032]> "1" FileHandling.Savers.StudentSaver
    AccountCreator -[bold,#B22032]> "1" FileHandling.Savers.InstructorSaver
    AccountCreator -[bold,#B22032]> "1" FileHandling.Savers.CourseAdministratorSaver

    LoginHandler -[bold,#B22032]> "1" FileHandling.Loaders.StudentLoader
    LoginHandler -[bold,#B22032]> "1" FileHandling.Loaders.InstructorLoader
    LoginHandler -[bold,#B22032]> "1" FileHandling.Loaders.CourseAdministratorLoader

    ' CourseAdministratorMenu
    CourseAdministratorMenu o-[bold,#B22032]- "0..*" Models.Study.Course
    CourseAdministratorMenu o-[bold,#B22032]- "0..1" Models.Users.CourseAdministrator
    CourseAdministratorMenu -[bold,#B22032]> Models.Users.Student
    CourseAdministratorMenu -[bold,#B22032]> FileHandling.Savers.ResultsSlipSaver
    CourseAdministratorMenu -[bold,#B22032]> "1" FileHandling.Loaders.StudentLoader

    ' InstructorMenu
    InstructorMenu o-[bold,#B22032]- "0..4" Models.Study.CourseModule
    InstructorMenu o-[bold,#B22032]- "0..1" Models.Users.Instructor
    InstructorMenu -[bold,#B22032]> "1" FileHandling.Loaders.InstructorLoader
    InstructorMenu -[bold,#B22032]> "1" FileHandling.Loaders.StudentLoader

    ' StudentMenu
    StudentMenu o-[bold,#B22032]- "0..*" Models.Study.CourseModule
    StudentMenu o-[bold,#B22032]- Models.Users.Student
    StudentMenu -[bold,#B22032]> "1" FileHandling.Loaders.StudentLoader
    StudentMenu -[bold,#B22032]> "1" FileHandling.Savers.CourseModuleSaver
    StudentMenu -[bold,#B22032]> "1" FileHandling.Savers.StudentSaver
}
@enduml